'use strict';

var itemQuantity = document.getElementsByClassName('item-quantity');
var itemPrice = document.getElementsByClassName('item-price');
var minus = document.getElementsByClassName('icon-minus');
var plus = document.getElementsByClassName('icon-plus');
var quantity = document.getElementsByClassName('quantity');
var priceToSum = document.getElementsByClassName('price');
var priceTotal = document.getElementById('total');
var taxPrice = document.getElementById('moms');
var deliver = document.getElementById('deliver');
var store = document.getElementById('store');

console.log(deliver.parentElement.nextElementSibling);

var itemPriceCalc = function () {
  var newQuantity = void 0;
  var newItemPrice = void 0;

  var getItemPrice = function getItemPrice(index) {
    var price = index === 0 ? 599 : 139;
    parseInt(price);
    return price;
  };

  var getTotalPrice = function getTotalPrice() {
    var priceArray = Array.from(priceToSum);
    var numberArray = priceArray.map(function (item) {
      return parseInt(item.textContent);
    });
    var sum = numberArray.reduce(function (total, num) {
      return total + num;
    });
    var extraCost = deliver.checked ? 79 : 0;
    var totalPrice = deliver.checked ? sum + extraCost : sum;
    return totalPrice;
  };

  var getTax = function getTax() {
    var total = parseInt(priceTotal.textContent);
    var tax = parseInt(total * 0.25);
    return tax;
  };

  var changeItemPrice = function changeItemPrice(index, q, action) {
    var currentItemPrice = parseInt(itemPrice[index].textContent);
    var priceOfItem = getItemPrice(index);
    newItemPrice = action ? currentItemPrice + priceOfItem : currentItemPrice - priceOfItem;
    itemPrice[index].innerHTML = newItemPrice;
    priceTotal.innerHTML = getTotalPrice();
    taxPrice.innerHTML = getTax();
  };

  var subtract = function subtract(index) {
    var currentQuantity = parseInt(quantity[index].textContent);
    if (currentQuantity > 0) {
      newQuantity = currentQuantity - 1;
      quantity[index].innerHTML = newQuantity;
      changeItemPrice(index, newQuantity, 0);
    } else if (itemQuantity === 0) {
      return;
    }
  };

  var add = function add(index) {
    var currentQuantity = parseInt(quantity[index].textContent);
    newQuantity = currentQuantity + 1;
    quantity[index].innerHTML = newQuantity;
    changeItemPrice(index, newQuantity, 1);
  };

  var changeDeliverStatus = function changeDeliverStatus() {
    priceTotal.innerHTML = getTotalPrice();
  };

  return {
    sub: subtract,
    add: add,
    delivery: changeDeliverStatus,
    total: getTotalPrice,
    tax: getTax
  };
}();

minus[0].addEventListener('click', function () {
  return itemPriceCalc.sub(0);
}, false);
plus[0].addEventListener('click', function () {
  return itemPriceCalc.add(0);
}, false);

minus[1].addEventListener('click', function () {
  return itemPriceCalc.sub(1);
}, false);
plus[1].addEventListener('click', function () {
  return itemPriceCalc.add(1);
}, false);

deliver.addEventListener('click', itemPriceCalc.delivery, false);
store.addEventListener('click', itemPriceCalc.delivery, false);

priceTotal.innerHTML = itemPriceCalc.total();
taxPrice.innerHTML = itemPriceCalc.tax();
'use strict';

var tabletControl = function () {
  var personalNumber = [];
  var firstContainer = document.getElementById('first-digits');
  var secondContainer = document.getElementById('last-digits');

  var getValue = function getValue(event) {
    var selectedNumber = event.target.tagName === 'P' && event.target.className !== 'check' && event.target.className !== 'delete' && event.target.textContent;
    if (selectedNumber) {
      if (personalNumber.length < 10) {
        personalNumber.push(selectedNumber);
        setValue(personalNumber);
      } else {
        console.log('reached max');
      }
    } else if (event.target.id === 'check') {
      console.log('clicked ok');
    } else if (event.target.id === 'delete') {
      personalNumber.pop();
      setValue(personalNumber);
    }
  };

  var setValue = function setValue(array) {
    firstContainer.innerHTML = array.slice(0, 6).join('');
    secondContainer.innerHTML = array.slice(6).join('');
  };

  return {
    getValue: getValue
  };
}();

var tablet = document.getElementById('tablet-wrapper');
tablet.addEventListener('click', tabletControl.getValue, false);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
